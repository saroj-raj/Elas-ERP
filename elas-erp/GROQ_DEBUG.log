[2025-10-27 19:08:37] ================================================================================
[2025-10-27 19:08:37] üß† GROQ AI - propose_widgets called
[2025-10-27 19:08:37] ================================================================================
[2025-10-27 19:08:37] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:08:37]    Domain: Sales Analytics
[2025-10-27 19:08:37]    Intent: Revenue Growth
[2025-10-27 19:08:37]    Columns: ['revenue', 'expenses', 'profit', 'date', 'category']
[2025-10-27 19:08:37]    Hints: {
  "has_date": true,
  "date_field": "date",
  "measures": [
    "revenue",
    "expenses",
    "profit"
  ],
  "categories": [
    "date",
    "category"
  ]
}
[2025-10-27 19:08:37] 
   Full User Data:
{
  "domain": "Sales Analytics",
  "intent": "Revenue Growth",
  "columns": [
    "revenue",
    "expenses",
    "profit",
    "date",
    "category"
  ],
  "hints": {
    "has_date": true,
    "date_field": "date",
    "measures": [
      "revenue",
      "expenses",
      "profit"
    ],
    "categories": [
      "date",
      "category"
    ]
  }
}
[2025-10-27 19:08:37] 
‚è≥ Calling Groq API...
[2025-10-27 19:08:37] 
‚ùå Groq API call failed: Error code: 400 - {'error': {'message': 'The model `llama-3.1-70b-versatile` has been decommissioned and is no longer supported. Please refer to https://console.groq.com/docs/deprecations for a recommendation on which model to use instead.', 'type': 'invalid_request_error', 'code': 'model_decommissioned'}}
[2025-10-27 19:08:37] 
‚ö†Ô∏è Using fallback widget generation
[2025-10-27 19:08:37] 
üîÑ Returning 2 fallback widgets:
[2025-10-27 19:08:37]    [
  {
    "title": "Monthly Trend",
    "chart": "line",
    "x": "date",
    "y": "SUM(revenue)",
    "group_by": null,
    "explanation": "Trend over time"
  },
  {
    "title": "Top Categories",
    "chart": "bar",
    "x": "date",
    "y": "SUM(revenue)",
    "group_by": null,
    "explanation": "Top contributors"
  }
]
[2025-10-27 19:08:37] ================================================================================

[2025-10-27 19:21:34] ================================================================================
[2025-10-27 19:21:34] üß† GROQ AI - propose_widgets called
[2025-10-27 19:21:34] ================================================================================
[2025-10-27 19:21:34] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:21:34]    Domain: general
[2025-10-27 19:21:34]    Intent: quick_viz
[2025-10-27 19:21:34]    Columns: ['Budget', 'ActualCost', 'Revenue', 'ProjectID', 'ProjectName', 'ClientName']
[2025-10-27 19:21:34]    Hints: {
  "has_date": true,
  "date_field": "StartDate",
  "measures": [
    "Budget",
    "ActualCost",
    "Revenue"
  ],
  "categories": [
    "ProjectID",
    "ProjectName",
    "ClientName"
  ]
}
[2025-10-27 19:21:34] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "Budget",
    "ActualCost",
    "Revenue",
    "ProjectID",
    "ProjectName",
    "ClientName"
  ],
  "hints": {
    "has_date": true,
    "date_field": "StartDate",
    "measures": [
      "Budget",
      "ActualCost",
      "Revenue"
    ],
    "categories": [
      "ProjectID",
      "ProjectName",
      "ClientName"
    ]
  }
}
[2025-10-27 19:21:34] 
‚è≥ Calling Groq API...
[2025-10-27 19:21:35] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:21:35] --------------------------------------------------------------------------------
[2025-10-27 19:21:35] ```json
[
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "List projects with their budget and actual costs"
  },
  {
    "title": "Revenue by Client",
    "chart": "bar",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Compare revenue across clients"
  }
]
```
[2025-10-27 19:21:35] --------------------------------------------------------------------------------
[2025-10-27 19:21:35] 
‚úÖ Successfully parsed 5 widgets from Groq
[2025-10-27 19:21:35]    Widgets: [
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "List projects with their budget and actual costs"
  },
  {
    "title": "Revenue by Client",
    "chart": "bar",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Compare revenue across clients"
  }
]
[2025-10-27 19:23:17] ================================================================================
[2025-10-27 19:23:17] üß† GROQ AI - propose_widgets called
[2025-10-27 19:23:17] ================================================================================
[2025-10-27 19:23:17] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:23:17]    Domain: general
[2025-10-27 19:23:17]    Intent: quick_viz
[2025-10-27 19:23:17]    Columns: ['TotalReceivables', 'Current', 'Days30', 'AccountID', 'ClientName', 'ProjectManager']
[2025-10-27 19:23:17]    Hints: {
  "has_date": false,
  "date_field": null,
  "measures": [
    "TotalReceivables",
    "Current",
    "Days30"
  ],
  "categories": [
    "AccountID",
    "ClientName",
    "ProjectManager"
  ]
}
[2025-10-27 19:23:17] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "TotalReceivables",
    "Current",
    "Days30",
    "AccountID",
    "ClientName",
    "ProjectManager"
  ],
  "hints": {
    "has_date": false,
    "date_field": null,
    "measures": [
      "TotalReceivables",
      "Current",
      "Days30"
    ],
    "categories": [
      "AccountID",
      "ClientName",
      "ProjectManager"
    ]
  }
}
[2025-10-27 19:23:17] 
‚è≥ Calling Groq API...
[2025-10-27 19:23:18] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:23:18] --------------------------------------------------------------------------------
[2025-10-27 19:23:18] ```json
[
  {
    "title": "Total Receivables by Account ID",
    "chart": "bar",
    "x": "AccountID",
    "y": "TotalReceivables",
    "group_by": null,
    "explanation": "Bar chart to compare total receivables across different account IDs"
  },
  {
    "title": "Total Receivables by Client Name",
    "chart": "bar",
    "x": "ClientName",
    "y": "TotalReceivables",
    "group_by": null,
    "explanation": "Bar chart to compare total receivables across different client names"
  },
  {
    "title": "Total Receivables by Project Manager",
    "chart": "bar",
    "x": "ProjectManager",
    "y": "TotalReceivables",
    "group_by": null,
    "explanation": "Bar chart to compare total receivables across different project managers"
  },
  {
    "title": "Current vs Total Receivables",
    "chart": "bar",
    "x": "AccountID",
    "y": "Current",
    "group_by": null,
    "explanation": "Bar chart to compare current and total receivables across different account IDs"
  },
  {
    "title": "Days 30 by Account ID",
    "chart": "bar",
    "x": "AccountID",
    "y": "Days30",
    "group_by": null,
    "explanation": "Bar chart to compare days 30 across different account IDs"
  },
  {
    "title": "Summary Table",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Table to display summary statistics for total receivables, current, and days 30"
  }
]
```
[2025-10-27 19:23:18] --------------------------------------------------------------------------------
[2025-10-27 19:23:18] 
‚úÖ Successfully parsed 6 widgets from Groq
[2025-10-27 19:23:18]    Widgets: [
  {
    "title": "Total Receivables by Account ID",
    "chart": "bar",
    "x": "AccountID",
    "y": "TotalReceivables",
    "group_by": null,
    "explanation": "Bar chart to compare total receivables across different account IDs"
  },
  {
    "title": "Total Receivables by Client Name",
    "chart": "bar",
    "x": "ClientName",
    "y": "TotalReceivables",
    "group_by": null,
    "explanation": "Bar chart to compare total receivables across different client names"
  },
  {
    "title": "Total Receivables by Project Manager",
    "chart": "bar",
    "x": "ProjectManager",
    "y": "TotalReceivables",
    "group_by": null,
    "explanation": "Bar chart to compare total receivables across different project managers"
  },
  {
    "title": "Current vs Total Receivables",
    "chart": "bar",
    "x": "AccountID",
    "y": "Current",
    "group_by": null,
    "explanation": "Bar chart to compare current and total receivables across different account IDs"
  },
  {
    "title": "Days 30 by Account ID",
    "chart": "bar",
    "x": "AccountID",
    "y": "Days30",
    "group_by": null,
    "explanation": "Bar chart to compare days 30 across different account IDs"
  },
  {
    "title": "Summary Table",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Table to display summary statistics for total receivables, current, and days 30"
  }
]
[2025-10-27 19:23:37] ================================================================================
[2025-10-27 19:23:37] üß† GROQ AI - propose_widgets called
[2025-10-27 19:23:37] ================================================================================
[2025-10-27 19:23:37] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:23:37]    Domain: general
[2025-10-27 19:23:37]    Intent: quick_viz
[2025-10-27 19:23:37]    Columns: ['Budget', 'ActualCost', 'Revenue', 'ProjectID', 'ProjectName', 'ClientName']
[2025-10-27 19:23:37]    Hints: {
  "has_date": true,
  "date_field": "StartDate",
  "measures": [
    "Budget",
    "ActualCost",
    "Revenue"
  ],
  "categories": [
    "ProjectID",
    "ProjectName",
    "ClientName"
  ]
}
[2025-10-27 19:23:37] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "Budget",
    "ActualCost",
    "Revenue",
    "ProjectID",
    "ProjectName",
    "ClientName"
  ],
  "hints": {
    "has_date": true,
    "date_field": "StartDate",
    "measures": [
      "Budget",
      "ActualCost",
      "Revenue"
    ],
    "categories": [
      "ProjectID",
      "ProjectName",
      "ClientName"
    ]
  }
}
[2025-10-27 19:23:37] 
‚è≥ Calling Groq API...
[2025-10-27 19:23:37] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:23:37] --------------------------------------------------------------------------------
[2025-10-27 19:23:37] ```json
[
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Visualize revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "Display project budget and actual cost side-by-side"
  }
]
```
[2025-10-27 19:23:37] --------------------------------------------------------------------------------
[2025-10-27 19:23:37] 
‚úÖ Successfully parsed 4 widgets from Groq
[2025-10-27 19:23:37]    Widgets: [
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Visualize revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "Display project budget and actual cost side-by-side"
  }
]
[2025-10-27 19:23:56] ================================================================================
[2025-10-27 19:23:56] üß† GROQ AI - propose_widgets called
[2025-10-27 19:23:56] ================================================================================
[2025-10-27 19:23:56] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:23:56]    Domain: general
[2025-10-27 19:23:56]    Intent: quick_viz
[2025-10-27 19:23:56]    Columns: ['Budget', 'ActualCost', 'Revenue', 'ProjectID', 'ProjectName', 'ClientName']
[2025-10-27 19:23:56]    Hints: {
  "has_date": true,
  "date_field": "StartDate",
  "measures": [
    "Budget",
    "ActualCost",
    "Revenue"
  ],
  "categories": [
    "ProjectID",
    "ProjectName",
    "ClientName"
  ]
}
[2025-10-27 19:23:56] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "Budget",
    "ActualCost",
    "Revenue",
    "ProjectID",
    "ProjectName",
    "ClientName"
  ],
  "hints": {
    "has_date": true,
    "date_field": "StartDate",
    "measures": [
      "Budget",
      "ActualCost",
      "Revenue"
    ],
    "categories": [
      "ProjectID",
      "ProjectName",
      "ClientName"
    ]
  }
}
[2025-10-27 19:23:56] 
‚è≥ Calling Groq API...
[2025-10-27 19:23:57] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:23:57] --------------------------------------------------------------------------------
[2025-10-27 19:23:57] ```json
[
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "List projects with their budget and actual costs"
  },
  {
    "title": "Revenue by Client",
    "chart": "bar",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Compare revenue across clients"
  }
]
```
[2025-10-27 19:23:57] --------------------------------------------------------------------------------
[2025-10-27 19:23:57] 
‚úÖ Successfully parsed 5 widgets from Groq
[2025-10-27 19:23:57]    Widgets: [
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "List projects with their budget and actual costs"
  },
  {
    "title": "Revenue by Client",
    "chart": "bar",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Compare revenue across clients"
  }
]
[2025-10-27 19:25:54] ================================================================================
[2025-10-27 19:25:54] üß† GROQ AI - propose_widgets called
[2025-10-27 19:25:54] ================================================================================
[2025-10-27 19:25:54] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:25:54]    Domain: general
[2025-10-27 19:25:54]    Intent: quick_viz
[2025-10-27 19:25:54]    Columns: ['Budget', 'ActualCost', 'Revenue', 'ProjectID', 'ProjectName', 'ClientName']
[2025-10-27 19:25:54]    Hints: {
  "has_date": true,
  "date_field": "StartDate",
  "measures": [
    "Budget",
    "ActualCost",
    "Revenue"
  ],
  "categories": [
    "ProjectID",
    "ProjectName",
    "ClientName"
  ]
}
[2025-10-27 19:25:54] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "Budget",
    "ActualCost",
    "Revenue",
    "ProjectID",
    "ProjectName",
    "ClientName"
  ],
  "hints": {
    "has_date": true,
    "date_field": "StartDate",
    "measures": [
      "Budget",
      "ActualCost",
      "Revenue"
    ],
    "categories": [
      "ProjectID",
      "ProjectName",
      "ClientName"
    ]
  }
}
[2025-10-27 19:25:54] 
‚è≥ Calling Groq API...
[2025-10-27 19:25:55] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:25:55] --------------------------------------------------------------------------------
[2025-10-27 19:25:55] ```json
[
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "Show budget and actual cost for each project"
  }
]
```
[2025-10-27 19:25:55] --------------------------------------------------------------------------------
[2025-10-27 19:25:55] 
‚úÖ Successfully parsed 4 widgets from Groq
[2025-10-27 19:25:55]    Widgets: [
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": "ClientName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": "ProjectID",
    "y": "Budget, ActualCost",
    "group_by": null,
    "explanation": "Show budget and actual cost for each project"
  }
]
[2025-10-27 19:29:27] ================================================================================
[2025-10-27 19:29:27] üß† GROQ AI - propose_widgets called
[2025-10-27 19:29:27] ================================================================================
[2025-10-27 19:29:27] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:29:27]    Domain: general
[2025-10-27 19:29:27]    Intent: quick_viz
[2025-10-27 19:29:27]    Columns: ['Budget', 'ActualCost', 'Revenue', 'ProjectID', 'ProjectName', 'ClientName']
[2025-10-27 19:29:27]    Hints: {
  "has_date": true,
  "date_field": "StartDate",
  "measures": [
    "Budget",
    "ActualCost",
    "Revenue"
  ],
  "categories": [
    "ProjectID",
    "ProjectName",
    "ClientName"
  ]
}
[2025-10-27 19:29:27] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "Budget",
    "ActualCost",
    "Revenue",
    "ProjectID",
    "ProjectName",
    "ClientName"
  ],
  "hints": {
    "has_date": true,
    "date_field": "StartDate",
    "measures": [
      "Budget",
      "ActualCost",
      "Revenue"
    ],
    "categories": [
      "ProjectID",
      "ProjectName",
      "ClientName"
    ]
  }
}
[2025-10-27 19:29:27] 
‚è≥ Calling Groq API...
[2025-10-27 19:29:28] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:29:28] --------------------------------------------------------------------------------
[2025-10-27 19:29:28] ```json
[
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": null,
    "y": "Revenue",
    "group_by": "ClientName",
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Show detailed project budget and actual cost information"
  },
  {
    "title": "Budget vs Actual Cost Over Time",
    "chart": "line",
    "x": "StartDate",
    "y": "Budget",
    "group_by": null,
    "explanation": "Track budgeted and actual costs over time"
  },
  {
    "title": "Revenue Over Time",
    "chart": "area",
    "x": "StartDate",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue trend over time"
  }
]
```
[2025-10-27 19:29:28] --------------------------------------------------------------------------------
[2025-10-27 19:29:28] 
‚úÖ Successfully parsed 6 widgets from Groq
[2025-10-27 19:29:28]    Widgets: [
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": null,
    "y": "Revenue",
    "group_by": "ClientName",
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Project Budget and Actual Cost",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Show detailed project budget and actual cost information"
  },
  {
    "title": "Budget vs Actual Cost Over Time",
    "chart": "line",
    "x": "StartDate",
    "y": "Budget",
    "group_by": null,
    "explanation": "Track budgeted and actual costs over time"
  },
  {
    "title": "Revenue Over Time",
    "chart": "area",
    "x": "StartDate",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue trend over time"
  }
]
[2025-10-27 19:29:39] ================================================================================
[2025-10-27 19:29:39] üß† GROQ AI - propose_widgets called
[2025-10-27 19:29:39] ================================================================================
[2025-10-27 19:29:39] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:29:39]    Domain: Sales Analytics
[2025-10-27 19:29:39]    Intent: Revenue Growth
[2025-10-27 19:29:39]    Columns: ['revenue', 'expenses', 'profit', 'date', 'category']
[2025-10-27 19:29:39]    Hints: {
  "has_date": true,
  "date_field": "date",
  "measures": [
    "revenue",
    "expenses",
    "profit"
  ],
  "categories": [
    "date",
    "category"
  ]
}
[2025-10-27 19:29:39] 
   Full User Data:
{
  "domain": "Sales Analytics",
  "intent": "Revenue Growth",
  "columns": [
    "revenue",
    "expenses",
    "profit",
    "date",
    "category"
  ],
  "hints": {
    "has_date": true,
    "date_field": "date",
    "measures": [
      "revenue",
      "expenses",
      "profit"
    ],
    "categories": [
      "date",
      "category"
    ]
  }
}
[2025-10-27 19:29:39] 
‚è≥ Calling Groq API...
[2025-10-27 19:29:40] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:29:40] --------------------------------------------------------------------------------
[2025-10-27 19:29:40] ```json
[
  {
    "title": "Monthly Revenue Trend",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "This line chart shows the monthly revenue trend over time, helping to identify patterns and anomalies in revenue growth."
  },
  {
    "title": "Revenue by Category",
    "chart": "bar",
    "x": "category",
    "y": "revenue",
    "group_by": null,
    "explanation": "This bar chart compares revenue across different categories, allowing for the identification of top-performing categories and areas for improvement."
  },
  {
    "title": "Expenses and Profit Over Time",
    "chart": "area",
    "x": "date",
    "y": "expenses",
    "group_by": null,
    "explanation": "This area chart displays the expenses over time, providing insight into how expenses impact revenue growth."
  },
  {
    "title": "Profit by Category",
    "chart": "bar",
    "x": "category",
    "y": "profit",
    "group_by": null,
    "explanation": "This bar chart compares profit across different categories, enabling the identification of profitable categories and areas for cost optimization."
  },
  {
    "title": "Revenue and Expenses Trend",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "This line chart shows the trend of revenue and expenses over time, helping to analyze the relationship between revenue and expenses."
  }
]
```
[2025-10-27 19:29:40] --------------------------------------------------------------------------------
[2025-10-27 19:29:40] 
‚úÖ Successfully parsed 5 widgets from Groq
[2025-10-27 19:29:40]    Widgets: [
  {
    "title": "Monthly Revenue Trend",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "This line chart shows the monthly revenue trend over time, helping to identify patterns and anomalies in revenue growth."
  },
  {
    "title": "Revenue by Category",
    "chart": "bar",
    "x": "category",
    "y": "revenue",
    "group_by": null,
    "explanation": "This bar chart compares revenue across different categories, allowing for the identification of top-performing categories and areas for improvement."
  },
  {
    "title": "Expenses and Profit Over Time",
    "chart": "area",
    "x": "date",
    "y": "expenses",
    "group_by": null,
    "explanation": "This area chart displays the expenses over time, providing insight into how expenses impact revenue growth."
  },
  {
    "title": "Profit by Category",
    "chart": "bar",
    "x": "category",
    "y": "profit",
    "group_by": null,
    "explanation": "This bar chart compares profit across different categories, enabling the identification of profitable categories and areas for cost optimization."
  },
  {
    "title": "Revenue and Expenses Trend",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "This line chart shows the trend of revenue and expenses over time, helping to analyze the relationship between revenue and expenses."
  }
]
[2025-10-27 19:32:16] ================================================================================
[2025-10-27 19:32:16] üß† GROQ AI - propose_widgets called
[2025-10-27 19:32:16] ================================================================================
[2025-10-27 19:32:16] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:32:16]    Domain: Test
[2025-10-27 19:32:16]    Intent: Debug
[2025-10-27 19:32:16]    Columns: ['revenue', 'expenses', 'profit', 'date', 'category']
[2025-10-27 19:32:16]    Hints: {
  "has_date": true,
  "date_field": "date",
  "measures": [
    "revenue",
    "expenses",
    "profit"
  ],
  "categories": [
    "date",
    "category"
  ]
}
[2025-10-27 19:32:16] 
   Full User Data:
{
  "domain": "Test",
  "intent": "Debug",
  "columns": [
    "revenue",
    "expenses",
    "profit",
    "date",
    "category"
  ],
  "hints": {
    "has_date": true,
    "date_field": "date",
    "measures": [
      "revenue",
      "expenses",
      "profit"
    ],
    "categories": [
      "date",
      "category"
    ]
  }
}
[2025-10-27 19:32:16] 
‚è≥ Calling Groq API...
[2025-10-27 19:32:17] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:32:17] --------------------------------------------------------------------------------
[2025-10-27 19:32:17] ```json
[
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Show the trend of revenue over time to identify patterns and anomalies."
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Compare expenses across different categories to identify areas for cost reduction."
  },
  {
    "title": "Profit by Date",
    "chart": "area",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Visualize the profit over time to identify periods of high and low profitability."
  },
  {
    "title": "Revenue vs Expenses",
    "chart": "bar",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Compare revenue and expenses over time to identify trends and anomalies."
  },
  {
    "title": "Category Distribution",
    "chart": "pie",
    "x": "category",
    "y": "revenue",
    "group_by": "category",
    "explanation": "Show the distribution of revenue across different categories to identify areas of high revenue generation."
  }
]
```
[2025-10-27 19:32:17] --------------------------------------------------------------------------------
[2025-10-27 19:32:17] 
‚úÖ Successfully parsed 5 widgets from Groq
[2025-10-27 19:32:17]    Widgets: [
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Show the trend of revenue over time to identify patterns and anomalies."
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Compare expenses across different categories to identify areas for cost reduction."
  },
  {
    "title": "Profit by Date",
    "chart": "area",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Visualize the profit over time to identify periods of high and low profitability."
  },
  {
    "title": "Revenue vs Expenses",
    "chart": "bar",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Compare revenue and expenses over time to identify trends and anomalies."
  },
  {
    "title": "Category Distribution",
    "chart": "pie",
    "x": "category",
    "y": "revenue",
    "group_by": "category",
    "explanation": "Show the distribution of revenue across different categories to identify areas of high revenue generation."
  }
]
[2025-10-27 19:34:54] ================================================================================
[2025-10-27 19:34:54] üß† GROQ AI - propose_widgets called
[2025-10-27 19:34:54] ================================================================================
[2025-10-27 19:34:54] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:34:54]    Domain: Sales Test
[2025-10-27 19:34:54]    Intent: Growth
[2025-10-27 19:34:54]    Columns: ['revenue', 'expenses', 'profit', 'date', 'category']
[2025-10-27 19:34:54]    Hints: {
  "has_date": true,
  "date_field": "date",
  "measures": [
    "revenue",
    "expenses",
    "profit"
  ],
  "categories": [
    "date",
    "category"
  ]
}
[2025-10-27 19:34:54] 
   Full User Data:
{
  "domain": "Sales Test",
  "intent": "Growth",
  "columns": [
    "revenue",
    "expenses",
    "profit",
    "date",
    "category"
  ],
  "hints": {
    "has_date": true,
    "date_field": "date",
    "measures": [
      "revenue",
      "expenses",
      "profit"
    ],
    "categories": [
      "date",
      "category"
    ]
  }
}
[2025-10-27 19:34:54] 
‚è≥ Calling Groq API...
[2025-10-27 19:34:55] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:34:55] --------------------------------------------------------------------------------
[2025-10-27 19:34:55] ```json
[
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Track revenue growth over time to identify trends and patterns."
  },
  {
    "title": "Expenses Over Time",
    "chart": "line",
    "x": "date",
    "y": "expenses",
    "group_by": null,
    "explanation": "Monitor expenses over time to optimize resource allocation."
  },
  {
    "title": "Profit Over Time",
    "chart": "line",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Analyze profit trends to inform business decisions and drive growth."
  },
  {
    "title": "Revenue by Category",
    "chart": "bar",
    "x": "category",
    "y": "revenue",
    "group_by": "category",
    "explanation": "Compare revenue across different categories to identify areas of strength and weakness."
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Evaluate expenses by category to optimize resource allocation and reduce waste."
  },
  {
    "title": "Profit by Category",
    "chart": "bar",
    "x": "category",
    "y": "profit",
    "group_by": "category",
    "explanation": "Assess profit by category to identify opportunities for growth and improvement."
  }
]
```
[2025-10-27 19:34:55] --------------------------------------------------------------------------------
[2025-10-27 19:34:55] 
‚úÖ Successfully parsed 6 widgets from Groq
[2025-10-27 19:34:55]    Widgets: [
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Track revenue growth over time to identify trends and patterns."
  },
  {
    "title": "Expenses Over Time",
    "chart": "line",
    "x": "date",
    "y": "expenses",
    "group_by": null,
    "explanation": "Monitor expenses over time to optimize resource allocation."
  },
  {
    "title": "Profit Over Time",
    "chart": "line",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Analyze profit trends to inform business decisions and drive growth."
  },
  {
    "title": "Revenue by Category",
    "chart": "bar",
    "x": "category",
    "y": "revenue",
    "group_by": "category",
    "explanation": "Compare revenue across different categories to identify areas of strength and weakness."
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Evaluate expenses by category to optimize resource allocation and reduce waste."
  },
  {
    "title": "Profit by Category",
    "chart": "bar",
    "x": "category",
    "y": "profit",
    "group_by": "category",
    "explanation": "Assess profit by category to identify opportunities for growth and improvement."
  }
]
[2025-10-27 19:35:15] ================================================================================
[2025-10-27 19:35:15] üß† GROQ AI - propose_widgets called
[2025-10-27 19:35:15] ================================================================================
[2025-10-27 19:35:15] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:35:15]    Domain: Test
[2025-10-27 19:35:15]    Intent: Check
[2025-10-27 19:35:15]    Columns: ['revenue', 'expenses', 'profit', 'date', 'category']
[2025-10-27 19:35:15]    Hints: {
  "has_date": true,
  "date_field": "date",
  "measures": [
    "revenue",
    "expenses",
    "profit"
  ],
  "categories": [
    "date",
    "category"
  ]
}
[2025-10-27 19:35:15] 
   Full User Data:
{
  "domain": "Test",
  "intent": "Check",
  "columns": [
    "revenue",
    "expenses",
    "profit",
    "date",
    "category"
  ],
  "hints": {
    "has_date": true,
    "date_field": "date",
    "measures": [
      "revenue",
      "expenses",
      "profit"
    ],
    "categories": [
      "date",
      "category"
    ]
  }
}
[2025-10-27 19:35:15] 
‚è≥ Calling Groq API...
[2025-10-27 19:35:16] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:35:16] --------------------------------------------------------------------------------
[2025-10-27 19:35:16] ```json
[
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Show the trend of revenue over time"
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Compare expenses across different categories"
  },
  {
    "title": "Profit Over Time",
    "chart": "area",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Visualize the cumulative profit over time"
  },
  {
    "title": "Revenue vs Expenses",
    "chart": "bar",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Compare revenue and expenses over time"
  },
  {
    "title": "Category-wise Profit",
    "chart": "pie",
    "x": "category",
    "y": "profit",
    "group_by": "category",
    "explanation": "Show the distribution of profit across categories"
  },
  {
    "title": "Summary Table",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Display a summary table of revenue, expenses, and profit"
  }
]
```
[2025-10-27 19:35:16] --------------------------------------------------------------------------------
[2025-10-27 19:35:16] 
‚úÖ Successfully parsed 6 widgets from Groq
[2025-10-27 19:35:16]    Widgets: [
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Show the trend of revenue over time"
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Compare expenses across different categories"
  },
  {
    "title": "Profit Over Time",
    "chart": "area",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Visualize the cumulative profit over time"
  },
  {
    "title": "Revenue vs Expenses",
    "chart": "bar",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Compare revenue and expenses over time"
  },
  {
    "title": "Category-wise Profit",
    "chart": "pie",
    "x": "category",
    "y": "profit",
    "group_by": "category",
    "explanation": "Show the distribution of profit across categories"
  },
  {
    "title": "Summary Table",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Display a summary table of revenue, expenses, and profit"
  }
]
[2025-10-27 19:35:23] ================================================================================
[2025-10-27 19:35:23] üß† GROQ AI - propose_widgets called
[2025-10-27 19:35:23] ================================================================================
[2025-10-27 19:35:23] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:35:23]    Domain: Test
[2025-10-27 19:35:23]    Intent: Debug
[2025-10-27 19:35:23]    Columns: ['revenue', 'expenses', 'profit', 'date', 'category']
[2025-10-27 19:35:23]    Hints: {
  "has_date": true,
  "date_field": "date",
  "measures": [
    "revenue",
    "expenses",
    "profit"
  ],
  "categories": [
    "date",
    "category"
  ]
}
[2025-10-27 19:35:23] 
   Full User Data:
{
  "domain": "Test",
  "intent": "Debug",
  "columns": [
    "revenue",
    "expenses",
    "profit",
    "date",
    "category"
  ],
  "hints": {
    "has_date": true,
    "date_field": "date",
    "measures": [
      "revenue",
      "expenses",
      "profit"
    ],
    "categories": [
      "date",
      "category"
    ]
  }
}
[2025-10-27 19:35:23] 
‚è≥ Calling Groq API...
[2025-10-27 19:35:24] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:35:24] --------------------------------------------------------------------------------
[2025-10-27 19:35:24] ```json
[
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Show the trend of revenue over time to identify patterns and anomalies."
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Compare expenses across different categories to identify areas for cost reduction."
  },
  {
    "title": "Profit Over Time",
    "chart": "area",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Visualize the cumulative profit over time to track business performance."
  },
  {
    "title": "Revenue vs Expenses",
    "chart": "bar",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Compare revenue and expenses over time to identify trends and correlations."
  },
  {
    "title": "Category-wise Profit",
    "chart": "pie",
    "x": "category",
    "y": "profit",
    "group_by": "category",
    "explanation": "Show the distribution of profit across different categories to identify profitable areas."
  }
]
```
[2025-10-27 19:35:24] --------------------------------------------------------------------------------
[2025-10-27 19:35:24] 
‚úÖ Successfully parsed 5 widgets from Groq
[2025-10-27 19:35:24]    Widgets: [
  {
    "title": "Revenue Over Time",
    "chart": "line",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Show the trend of revenue over time to identify patterns and anomalies."
  },
  {
    "title": "Expenses by Category",
    "chart": "bar",
    "x": "category",
    "y": "expenses",
    "group_by": "category",
    "explanation": "Compare expenses across different categories to identify areas for cost reduction."
  },
  {
    "title": "Profit Over Time",
    "chart": "area",
    "x": "date",
    "y": "profit",
    "group_by": null,
    "explanation": "Visualize the cumulative profit over time to track business performance."
  },
  {
    "title": "Revenue vs Expenses",
    "chart": "bar",
    "x": "date",
    "y": "revenue",
    "group_by": null,
    "explanation": "Compare revenue and expenses over time to identify trends and correlations."
  },
  {
    "title": "Category-wise Profit",
    "chart": "pie",
    "x": "category",
    "y": "profit",
    "group_by": "category",
    "explanation": "Show the distribution of profit across different categories to identify profitable areas."
  }
]
[2025-10-27 19:38:35] ================================================================================
[2025-10-27 19:38:35] üß† GROQ AI - propose_widgets called
[2025-10-27 19:38:35] ================================================================================
[2025-10-27 19:38:35] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:38:35]    Domain: general
[2025-10-27 19:38:35]    Intent: quick_viz
[2025-10-27 19:38:35]    Columns: ['TotalDeals', 'WonDeals', 'LostDeals', 'Region']
[2025-10-27 19:38:35]    Hints: {
  "has_date": false,
  "date_field": null,
  "measures": [
    "TotalDeals",
    "WonDeals",
    "LostDeals"
  ],
  "categories": [
    "Region"
  ]
}
[2025-10-27 19:38:35] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "TotalDeals",
    "WonDeals",
    "LostDeals",
    "Region"
  ],
  "hints": {
    "has_date": false,
    "date_field": null,
    "measures": [
      "TotalDeals",
      "WonDeals",
      "LostDeals"
    ],
    "categories": [
      "Region"
    ]
  }
}
[2025-10-27 19:38:35] 
‚è≥ Calling Groq API...
[2025-10-27 19:38:36] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:38:36] --------------------------------------------------------------------------------
[2025-10-27 19:38:36] ```json
[
  {
    "title": "Total Deals by Region",
    "chart": "bar",
    "x": "Region",
    "y": "TotalDeals",
    "group_by": null,
    "explanation": "This bar chart shows the total number of deals for each region."
  },
  {
    "title": "Won Deals by Region",
    "chart": "bar",
    "x": "Region",
    "y": "WonDeals",
    "group_by": null,
    "explanation": "This bar chart shows the number of won deals for each region."
  },
  {
    "title": "Lost Deals by Region",
    "chart": "bar",
    "x": "Region",
    "y": "LostDeals",
    "group_by": null,
    "explanation": "This bar chart shows the number of lost deals for each region."
  },
  {
    "title": "Deal Outcome by Region",
    "chart": "pie",
    "x": null,
    "y": "TotalDeals",
    "group_by": "Region",
    "explanation": "This pie chart shows the proportion of total deals for each region."
  },
  {
    "title": "Deal Outcome Summary",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "This table shows a summary of the deal outcomes."
  }
]
```
[2025-10-27 19:38:36] --------------------------------------------------------------------------------
[2025-10-27 19:38:36] 
‚úÖ Successfully parsed 5 widgets from Groq
[2025-10-27 19:38:36]    Widgets: [
  {
    "title": "Total Deals by Region",
    "chart": "bar",
    "x": "Region",
    "y": "TotalDeals",
    "group_by": null,
    "explanation": "This bar chart shows the total number of deals for each region."
  },
  {
    "title": "Won Deals by Region",
    "chart": "bar",
    "x": "Region",
    "y": "WonDeals",
    "group_by": null,
    "explanation": "This bar chart shows the number of won deals for each region."
  },
  {
    "title": "Lost Deals by Region",
    "chart": "bar",
    "x": "Region",
    "y": "LostDeals",
    "group_by": null,
    "explanation": "This bar chart shows the number of lost deals for each region."
  },
  {
    "title": "Deal Outcome by Region",
    "chart": "pie",
    "x": null,
    "y": "TotalDeals",
    "group_by": "Region",
    "explanation": "This pie chart shows the proportion of total deals for each region."
  },
  {
    "title": "Deal Outcome Summary",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "This table shows a summary of the deal outcomes."
  }
]
[2025-10-27 19:41:13] ================================================================================
[2025-10-27 19:41:13] üß† GROQ AI - propose_widgets called
[2025-10-27 19:41:13] ================================================================================
[2025-10-27 19:41:13] 
üì§ INPUT DATA SENT TO GROQ:
[2025-10-27 19:41:13]    Domain: general
[2025-10-27 19:41:13]    Intent: quick_viz
[2025-10-27 19:41:13]    Columns: ['Budget', 'ActualCost', 'Revenue', 'ProjectID', 'ProjectName', 'ClientName']
[2025-10-27 19:41:13]    Hints: {
  "has_date": true,
  "date_field": "StartDate",
  "measures": [
    "Budget",
    "ActualCost",
    "Revenue"
  ],
  "categories": [
    "ProjectID",
    "ProjectName",
    "ClientName"
  ]
}
[2025-10-27 19:41:13] 
   Full User Data:
{
  "domain": "general",
  "intent": "quick_viz",
  "columns": [
    "Budget",
    "ActualCost",
    "Revenue",
    "ProjectID",
    "ProjectName",
    "ClientName"
  ],
  "hints": {
    "has_date": true,
    "date_field": "StartDate",
    "measures": [
      "Budget",
      "ActualCost",
      "Revenue"
    ],
    "categories": [
      "ProjectID",
      "ProjectName",
      "ClientName"
    ]
  }
}
[2025-10-27 19:41:13] 
‚è≥ Calling Groq API...
[2025-10-27 19:41:14] 
üì• GROQ RAW RESPONSE:
[2025-10-27 19:41:14] --------------------------------------------------------------------------------
[2025-10-27 19:41:14] ```json
[
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": null,
    "y": "Revenue",
    "group_by": "ClientName",
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Budget vs Actual Cost Over Time",
    "chart": "line",
    "x": "StartDate",
    "y": "Budget",
    "group_by": null,
    "explanation": "Track budgeted and actual costs over time"
  },
  {
    "title": "Project Costs",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Show detailed project costs, including budget and actual costs"
  }
]
```
[2025-10-27 19:41:14] --------------------------------------------------------------------------------
[2025-10-27 19:41:14] 
‚úÖ Successfully parsed 5 widgets from Groq
[2025-10-27 19:41:14]    Widgets: [
  {
    "title": "Budget vs Actual Cost",
    "chart": "bar",
    "x": "ProjectID",
    "y": "Budget",
    "group_by": null,
    "explanation": "Compare budgeted and actual costs across projects"
  },
  {
    "title": "Revenue by Project",
    "chart": "bar",
    "x": "ProjectName",
    "y": "Revenue",
    "group_by": null,
    "explanation": "Show revenue generated by each project"
  },
  {
    "title": "Client Revenue",
    "chart": "pie",
    "x": null,
    "y": "Revenue",
    "group_by": "ClientName",
    "explanation": "Display revenue distribution across clients"
  },
  {
    "title": "Budget vs Actual Cost Over Time",
    "chart": "line",
    "x": "StartDate",
    "y": "Budget",
    "group_by": null,
    "explanation": "Track budgeted and actual costs over time"
  },
  {
    "title": "Project Costs",
    "chart": "table",
    "x": null,
    "y": null,
    "group_by": null,
    "explanation": "Show detailed project costs, including budget and actual costs"
  }
]
